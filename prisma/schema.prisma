// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "cargo prisma"

  output = "../src/prisma.rs"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum EventType {
  Activity
  Food
  Workshop
  checkIn
}

model Event {
  id               Int       @id @default(autoincrement())
  name             String
  type             EventType
  description      String
  location         Location  @relation(fields: [locationId], references: [id])
  locationId       Int
  icon             String?
  startTime        DateTime
  endTime          DateTime
  wsPresenterNames String?
  wsRelevantSkills String?
  wsSkillLevel     String?
  wsUrls           String?
  hackathon        Hackathon @relation(fields: [hackathonId], references: [id])
  hackathonId      Int
}

model ExtraCreditAssignment {
  user    User             @relation(fields: [userId], references: [id])
  userId  Int
  class   ExtraCreditClass @relation(fields: [classId], references: [id])
  classId Int

  @@unique([userId, classId])
}

model ExtraCreditClass {
  id                    Int                     @id @default(autoincrement())
  name                  String
  hackathon             Hackathon               @relation(fields: [hackathonId], references: [id])
  hackathonId           Int
  ExtraCreditAssignment ExtraCreditAssignment[]
}

model Hackathon {
  id               Int                @id @default(autoincrement())
  name             String
  startTime        DateTime
  endTime          DateTime
  active           Boolean
  Event            Event[]
  ExtraCreditClass ExtraCreditClass[]
  Project          Project[]
  Registration     Registration[]
  Scan             Scan[]
  Sponsor          Sponsor[]
}

model Location {
  id    Int     @id @default(autoincrement())
  name  String
  Event Event[]
}

enum Role {
  NONE
  VOLUNTEER
  TEAM
  EXEC
  TECH
  FINANCE
}

model Organizer {
  id        String @id
  firstName String
  lastName  String
  email     String
  privilege Role
  Scan      Scan[]
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  hackathon   Hackathon @relation(fields: [hackathonId], references: [id])
  hackathonId Int
}

model Registration {
  id                         Int       @id @default(autoincrement())
  user                       User      @relation(fields: [userId], references: [id])
  userId                     Int
  travelReimbursement        Boolean
  driving                    Boolean
  firstHackathon             Boolean
  academicYear               String
  educationalInstitutionType String
  codingExoerience           String?
  eighteenBeforeEvent        Boolean
  mlhCoc                     Boolean
  mlhDcp                     Boolean
  reference                  String?
  //project 
  expectations               String?
  shareAddressMlh            Boolean?
  shareAddressSponsors       Boolean?
  shareEmailMlh              Boolean?
  veteran                    Boolean
  hackathon                  Hackathon @relation(fields: [hackathonId], references: [id])
  hackathonId                Int
  time                       DateTime
}

model Scan {
  eventId     Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  organizer   Organizer @relation(fields: [organizerId], references: [id])
  organizerId String
  hackathon   Hackathon @relation(fields: [hackathonId], references: [id])
  hackathonId Int

  @@unique([eventId, userId])
}

model Sponsor {
  id          Int       @id @default(autoincrement())
  name        String
  level       String
  link        String?
  darkLogo    String
  lightLogo   String
  order       Int
  hackathon   Hackathon @relation(fields: [hackathonId], references: [id])
  hackathonId Int
}

model User {
  id                    Int                     @id @default(autoincrement())
  firstName             String
  lastName              String
  gender                String
  shirtSize             String
  dietaryRestrictions   String?
  allergies             String?
  university            String
  email                 String                  @unique
  major                 String
  phone                 String
  country               String
  race                  String?
  resume                String?
  ExtraCreditAssignment ExtraCreditAssignment[]
  Registration          Registration[]
  Scan                  Scan[]
}
